
0.3.1 / 2012-12-14 
==================
Rearranged directories to flatten the structure.
Focus is entirely on Python, skipping Java and Perl.

Detailed work:
  * Made top directory of project is more compact.
  * Moving unused files to Archive.
  * Moving Java and Perl code into the Archive since Python looks like the way to go.
  
0.3.0 / 2012-12-02 
==================
Have a working version of Layout.py which can run processing for common sized apps, from Android to iPad in portait or landscape mode.
Moved code for Java and Perl into the archive since there is not enough reason to keep those versions alive.

Detailed work:
  * Moving Java and Perl code into the Archive since Python looks like the way to go.
  * Version 0.3.0 with working RunProcessing and Layout classes.
  * Merge branch 'feature/RunProcessing' into devo Got program and tests to work for Python. Decided to abandon work to also do so in Java and Perl since there is not enough payoff with the alternatives.
  * Will not check in files used to generate processing graphs.
  * Added processing.jar which can create processing animations given a text file.
  * Python test/class for RunProcessing work.
  * Added setup() method.
  * Added RunProcessing class, setup() methods to Layout subclasses.
  * Have a few more gutters.
  * Made tarball releases smaller.
  * Keep VERSION external of build.gradle so easier to find.
  * Merge branch 'release/0.2' into devo

0.2.0 / 2012-11-23 
==================
Worked on static UML class diagragm.
Got test driven development model working for Python, Java, and Perl.

Detailed work:
  * Moved more functions into rotations, boosts, and menu classes.
  * Added Layout.Size Class.  Wrote in Java/Python/Perl test and classes.
  * Added task makeJavaShells.  Need to add a new key/value pair for each runnable java class.
  * Added Layout.Grid class.
  * Builds another java executable.
  * Using variable names_with_underscores instead of mixedCaseNames.
  * Added  appLength, appWidth to Layout class.
  * Lots of work on the Layout subclasses.
  * Changed #! line to use env, more general.
  * Use main() instead of run(), more traditional name.
  * Using setUp in test classes.

Version 0.1  Sept, 2012
Mockups are mature.  Clickable PDF files can be downloaded to a phone.

Version 0.0   April 02, 2012
Start it up.
